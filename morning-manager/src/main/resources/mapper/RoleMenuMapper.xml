<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.posp.ui.dao.IRoleMenuMapper">
    <resultMap id="BaseResultMap" type="com.posp.common.service.user.entyty.RoleMenuDO">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="MENU_ID" property="menuId" jdbcType="VARCHAR"/>
        <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID,MENU_ID,ROLE_ID
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM S_ROLE_MENU WHERE ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        DELETE FROM S_ROLE_MENU WHERE ID = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.posp.common.service.user.entyty.RoleMenuDO">
        INSERT INTO S_ROLE_MENU (ID,MENU_ID,ROLE_ID)
        VALUES(#{id,jdbcType=VARCHAR},#{menuId,jdbcType=VARCHAR},#{roleId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.posp.common.service.user.entyty.RoleMenuDO">
        INSERT INTO S_ROLE_MENU
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="menuId != null">
                MENU_ID,
            </if>
            <if test="roleId != null">
                ROLE_ID
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="menuId != null">
                #{menuId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.posp.common.service.user.entyty.RoleMenuDO">
        UPDATE S_ROLE_MENU
        <set>
            <if test="menuId != null">
                MENU_ID = #{menuId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                ROLE_ID = #{roleId,jdbcType=VARCHAR}
            </if>
        </set>
        WHERE ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.posp.common.service.user.entyty.RoleMenuDO">
        UPDATE S_ROLE_MENU
        SET
            MENU_ID = #{menuId,jdbcType=VARCHAR},
            ROLE_ID = #{roleId,jdbcType=VARCHAR}
        WHERE ID = #{id,jdbcType=VARCHAR}
    </update>
    <!--自定义查询条件-->
    <sql id="whereQueryParam">
        <if test="id != null and id != ''">
            AND ID = #{id}
        </if>
        <if test="menuId != null and menuId != ''">
            AND MENU_ID = #{menuId}
        </if>
        <if test="roleId != null and roleId != ''">
            AND ROLE_ID = #{roleId}
        </if>
    </sql>
    <!--自定义方法-->
    <select id="selectByParam" resultMap="BaseResultMap"
            parameterType="com.posp.common.service.user.query.RoleMenuQuery">
        SELECT
        <include refid="Base_Column_List"/>
        FROM S_ROLE_MENU
        <where>
            <include refid="whereQueryParam"></include>
        </where>
    </select>
    <!--自定义方法2,本机构以及下属机构-->
    <select id="selectByParamAndOrg" resultMap="BaseResultMap"
            parameterType="com.posp.common.service.user.query.RoleMenuQuery">
        SELECT
        <include refid="Base_Column_List"/>
        FROM S_ROLE_MENU
        <where>
            ORG_CODE IN (SELECT code FROM S_ORGANIZE WHERE INSTR(GROUP_CODES,#{organizeCode})>0)
            <include refid="whereQueryParam"></include>
        </where>
    </select>
    <!--批量删除-->
    <delete id="batchDelete" parameterType="java.util.List">
        DELETE FROM S_ROLE_MENU WHERE ID IN
        <foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    <!--批量新增-->
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO S_ROLE_MENU (ID,MENU_ID,ROLE_ID)
        SELECT a.* FROM (
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            SELECT
            #{item.id,jdbcType=VARCHAR},
            #{item.menuId,jdbcType=VARCHAR},
            #{item.roleId,jdbcType=VARCHAR}
            FROM dual
        </foreach>
        ) a
    </insert>
    <delete id="deleteByRoleId" parameterType="java.lang.String">
        DELETE FROM S_ROLE_MENU WHERE ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </delete>
    <!-- 根据角色id查询菜单id-->
    <select id="selectMenuIdByRoleId" resultType="java.lang.String" parameterType="java.util.List">
        SELECT
        MENU_ID
        FROM S_ROLE_MENU
        WHERE
        ROLE_ID IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </select>
    <!--根据菜单id集合和部门编号集合查询角色id组-->
    <select id="selectRoleIdIdByMenuId" resultType="java.lang.String" parameterType="java.util.List">
        SELECT
        DISTINCT srm.ROLE_ID
        FROM S_ROLE_MENU srm
        INNER JOIN S_ROLE sr on sr.ID = srm.ROLE_ID
        WHERE
        srm.MENU_ID IN
        <foreach collection="menuList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="orgCodeList.size()>0 ">
        	AND sr.ORG_CODE IN
	        <foreach collection="orgCodeList" index="index" item="item" open="(" separator="," close=")">
	            #{item}
	        </foreach>
        </if>
    </select>
    <!--根据角色id和菜单id删除记录-->
    <delete id="deleteByRoleIdAndMenuId" parameterType="com.posp.common.service.user.entyty.RoleMenuDO">
        DELETE FROM S_ROLE_MENU
        WHERE MENU_ID
         IN
        <foreach collection="menuIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND ROLE_ID IN
        <foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    
    <!-- change用户角色不包含的菜单-->
    <select id="selectRoleNotMenuOfChange" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM S_ROLE_MENU
        WHERE 
        	ROLE_ID =  #{roleId,jdbcType=VARCHAR}
        <if test="meruId.size() > 0">
            AND MENU_ID NOT IN 
            <foreach collection="meruId" item="item" separator="," open="(" close=")">
                #{item,jdbcType=VARCHAR}
            </foreach>
        </if>
    </select>
    
    <!-- change查询包含角色的用户机构-->
    <select id="selectUsersByRoleIdOfChange" resultType="java.util.Map" parameterType="java.lang.String">
    	select 
		u.org_code as orgCode,so.group_codes as groupCodes 
		from S_USER_ROLE ur1 
		join S_USER u on u.id = ur1.user_id
		join S_ORGANIZE so on so.code = u.org_code
		where ur1.role_id = #{roleId,jdbcType=VARCHAR}    
    </select>
    
    <!-- change查询要删除的角色与菜单-->
    <select id="selectUsersRoleIdOfChange" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		rm.id as id
		,rm.role_id as roleId
		,rm.menu_id as menuId
		from S_USER u
		join S_USER_ROLE ur on ur.user_id = u.id
		join S_ROLE_MENU rm on rm.role_id = ur.role_id
		where 
            rm.menu_id IN
            <foreach collection="meruList" item="item" separator="," open="(" close=")">
                #{item,jdbcType=VARCHAR}
            </foreach>
			<if test="orgCodeList!=null">
	            AND u.org_code IN 
	            <foreach collection="orgCodeList" item="item" separator="," open="(" close=")">
	                #{item,jdbcType=VARCHAR}
	            </foreach>
	        </if> 
    </select>    
</mapper>