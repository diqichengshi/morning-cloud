<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.morning.shop.order.dao.ShoppingCartMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.morning.common.service.shop.order.entity.ShoppingCart">
        <id column="cart_id" property="cartId"/>
        <result column="product_id" property="productId"/>
        <result column="kind_id" property="kindId"/>
        <result column="user_id" property="userId"/>
        <result column="buy_number" property="buyNumber"/>
        <result column="check_status" property="checkStatus"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        cart_id AS cartId, product_spec_number AS productSpecNumber, user_id AS userId, buy_number AS buyNumber, create_time AS createTime, update_time AS updateTime, check_status AS checkStatus
    </sql>

    <!-- 根据用户ID、产品规格编号查找购物车商品信息 -->
    <select id="queryShoppingCart" resultType="com.morning.common.service.shop.product.vo.ShoppingCartVO">
    	SELECT
			c.cart_id AS cartId, 
			c.product_spec_attr_id AS productSpecAttrId,
			c.user_id AS userId, 
			c.buy_number AS buyNumber,
			s.spec,
			s.stock,
			s.sales_volume AS salesVolume,
			s.price,
			s.score,
			p.name,
			p.pic_img AS picImg,
			p.product_id AS productId
    	FROM
    		os_shopping_cart c
    	LEFT JOIN os_product p ON c.product_id = p.product_id
		LEFT JOIN os_product_specification s ON s.product_id = p.product_id
    	WHERE
    		c.user_id = #{userId}
    	AND c.product_spec_id = #{productSpecId}
    </select>

    <!-- 根据用户ID查找购物车商品列表 -->
    <select id="shoppingCartList" resultType="com.morning.common.service.shop.product.vo.ShoppingCartVO">
        SELECT
            c.cart_id AS cartId,
            c.product_spec_attr_id AS productSpecAttrId,
            c.user_id AS userId,
            c.buy_number AS buyNumber,
            c.check_status AS checkStatus,
            s.spec,
            s.stock,
            s.sales_volume AS salesVolume,
            p.show_score as price,
            p.show_score as score,
            p.name,
            p.pic_img AS picImg,
            p.product_id as productId
        FROM
        os_shopping_cart c
        LEFT JOIN os_product p ON c.product_id = p.product_id
        LEFT JOIN os_product_specification s ON s.product_id = p.product_id
        <where>
            1=1
            <if test="userId != null">
                AND c.user_id = #{userId}
            </if>
            <if test="checkStatus != null">
                AND c.check_status = #{checkStatus}
            </if>
        </where>
    </select>

    <update id="checkedOrUncheckedProduct" parameterType="map">
        UPDATE os_shopping_cart
        set checked = #{checked},
        update_time = now()
        where user_id = #{userId}
        <if test="productId != null">
            and product_id = #{productId}
        </if>
    </update>

    <select id="selectByProductIdAndUserId" resultType="com.morning.common.service.shop.order.entity.ShoppingCart"
            parameterType="map">
		SELECT  * from os_shopping_cart where product_id = #{productId} and user_id = #{userId}
	</select>

    <delete id="deleteByUserIdKindIdList" parameterType="map">
        delete from os_shopping_cart
        where user_id = #{userId}
        <if test="kindId != null">
            and kind_id in
            <foreach collection="kindId" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>

</mapper>
